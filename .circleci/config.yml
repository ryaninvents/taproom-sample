---
# Using CircleCI for now because I've got a setup ready to go.
# Looking for any excuse to move to GitHub Actions, though...
version: 2
jobs:
  install:
    docker: &NodeDocker
      - image: 'circleci/node:11'
    steps:
      - checkout
      - run:
          name: install
          command: yarn
      - run:
          name: Prepare Cypress
          command: npx gulp precypress
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/**
            - cypress.json
  build:
    docker: *NodeDocker
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - &AttachWorkspaceHere
        attach_workspace:
          at: .
      - run:
          name: build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
  unitTest:
    docker: *NodeDocker
    steps:
      - checkout
      - *AttachWorkspaceHere
      - run:
          name: test
          command: npm test
  deploy:
    docker: *NodeDocker
    steps:
      - checkout
      - *AttachWorkspaceHere
      - run:
          name: test
          command: npx slate-tools deploy
  e2eTest:
    docker:
    - image: cypress/browsers:chrome67
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: 'cypress install'
          command: 'npx cypress install'
          environment:
            NODE_ENV: development
      - run:
          name: test
          command: yarn test:e2e
          environment:
            NODE_ENV: test
      - run:
          name: Move screenshots
          command: cp cypress/screenshots/*/*.png .
      - run:
          name: Verify screenshots
          command: 'ls *.png || exit 0'
      - store_artifacts:
          path: 'home-desktop.png'
      - store_artifacts:
          path: 'home-mobile.png'
  zip:
    docker: *NodeDocker
    steps:
      - checkout
      - *AttachWorkspaceHere
      - run:
          name: zip
          command: npx slate-tools zip
      - persist_to_workspace:
          root: .
          paths:
            - '*.zip'
  release:
    docker: *NodeDocker
    steps:
      - checkout
      - *AttachWorkspaceHere
      - run:
          name: release
          command: npx semantic-release
workflows:
  version: 2
  main:
    jobs:
      - install:
          context: gh-npm-public
      - build:
          context: gh-npm-public
          requires:
            - install
      - unitTest:
          context: gh-npm-public
          requires:
            - install
      - zip:
          context: gh-npm-public
          requires:
            - build
      - deploy:
          context: gh-npm-public
          requires:
            - build
      - e2eTest:
          context: gh-npm-public
          requires:
            - deploy
      - release:
          context: gh-npm-public
          requires:
            - e2eTest
            - unitTest
            - zip